pipeline {
    agent any

    environment {
        JAR_NAME = "upi-acq-vo-1.0.121.jar"
        ARTIFACTORY_REPO = "example-repo-local"
        ARTIFACTORY_URL = "http://18.233.96.100:8081/artifactory"
        DEPLOY_PATH = "/home/ec2-user"
        SSH_CREDENTIALS_ID = "aa8ac405-0526-49c2-9c44-098576f72062"
        JAR_FILE = "${env.WORKSPACE}/${JAR_NAME}"
        APP_IP = "34.227.227.1"
        ARTIFACTORY_USER = "admin"
        ARTIFACTORY_PASSWORD = "password"
        APP_PORT = "8080"
    }

    stages {
        stage('Upload to JFrog Artifactory') {
            steps {
                sh """
                    jf rt upload "${JAR_FILE}" "${ARTIFACTORY_REPO}/${JAR_NAME}" \
                    --url="${ARTIFACTORY_URL}" \
                    --user="${ARTIFACTORY_USER}" \
                    --password="${ARTIFACTORY_PASSWORD}" \
                    --flat=true
                """
            }
        }

        stage('Download & Run JAR on EC2') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(
                        credentialsId: SSH_CREDENTIALS_ID,
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USER'
                    )]) {
                        def deployCmd = """
                            cd ${DEPLOY_PATH} &&
                            pkill -f '${JAR_NAME}' || true &&
                            curl -u ${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD} -O ${ARTIFACTORY_URL}/${ARTIFACTORY_REPO}/${JAR_NAME} &&
                            chmod +x ${JAR_NAME} &&
                            nohup java -jar ${JAR_NAME} > app.log 2>&1 &
                        """
                        sh """
                            ssh -o StrictHostKeyChecking=no -i \$SSH_KEY_PATH \$SSH_USER@${APP_IP} '${deployCmd}'
                        """
                    }
                }
            }
        }

        stage('Verify Spring Boot App Running') {
            steps {
                echo "Verifying application..."
                sh """
                    sleep 10
                    STATUS=\$(curl -s -o /dev/null -w '%{http_code}' http://${APP_IP}:${APP_PORT}/)
                    if [ "\$STATUS" == "200" ]; then
                      echo "App is running: HTTP \$STATUS"
                    else
                      echo "App failed to start: HTTP \$STATUS"
                    fi
                """
            }
        }
    }
}
